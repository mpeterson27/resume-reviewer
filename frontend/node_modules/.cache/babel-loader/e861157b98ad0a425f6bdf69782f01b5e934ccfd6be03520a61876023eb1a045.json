{"ast":null,"code":"import React,{useState}from\"react\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const UploadForm=_ref=>{let{onFeedback}=_ref;const[file,setFile]=useState(null);const[loading,setLoading]=useState(false);const handleFileChange=e=>{if(e.target.files&&e.target.files[0]){setFile(e.target.files[0]);}};const handleSubmit=async e=>{e.preventDefault();if(!file)return;const formData=new FormData();formData.append(\"file\",file);setLoading(true);try{const response=await fetch(\"http://localhost:3001/api/review\",{method:\"POST\",body:formData});if(!response.ok){throw new Error(\"Failed to get feedback from server.\");}const data=await response.json();console.log(\"✅ Feedback:\",data);// Pass feedback to parent\nonFeedback(data);// Optional: save to localStorage\nlocalStorage.setItem(\"feedback\",JSON.stringify(data));}catch(error){console.error(\"Upload failed:\",error);alert(\"Something went wrong while submitting the resume.\");}finally{setLoading(false);}};return/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,style:{marginBottom:\"2rem\"},children:[/*#__PURE__*/_jsx(\"input\",{type:\"file\",accept:\".pdf,.doc,.docx\",onChange:handleFileChange}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",disabled:!file||loading,children:loading?\"Reviewing...\":\"Submit for Review\"})]});};export default UploadForm;","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","UploadForm","_ref","onFeedback","file","setFile","loading","setLoading","handleFileChange","e","target","files","handleSubmit","preventDefault","formData","FormData","append","response","fetch","method","body","ok","Error","data","json","console","log","localStorage","setItem","JSON","stringify","error","alert","onSubmit","style","marginBottom","children","type","accept","onChange","disabled"],"sources":["C:/Users/Owner/Desktop/Resume-Reviewer/frontend/src/components/UploadForm.tsx"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\ninterface UploadFormProps {\r\n  onFeedback: (data: any) => void;\r\n}\r\n\r\nconst UploadForm: React.FC<UploadFormProps> = ({ onFeedback }) => {\r\n  const [file, setFile] = useState<File | null>(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (e.target.files && e.target.files[0]) {\r\n      setFile(e.target.files[0]);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (!file) return;\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"file\", file);\r\n\r\n    setLoading(true);\r\n    try {\r\n      const response = await fetch(\"http://localhost:3001/api/review\", {\r\n        method: \"POST\",\r\n        body: formData,\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Failed to get feedback from server.\");\r\n      }\r\n\r\n      const data = await response.json();\r\n      console.log(\"✅ Feedback:\", data);\r\n\r\n      // Pass feedback to parent\r\n      onFeedback(data);\r\n\r\n      // Optional: save to localStorage\r\n      localStorage.setItem(\"feedback\", JSON.stringify(data));\r\n    } catch (error) {\r\n      console.error(\"Upload failed:\", error);\r\n      alert(\"Something went wrong while submitting the resume.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} style={{ marginBottom: \"2rem\" }}>\r\n      <input\r\n        type=\"file\"\r\n        accept=\".pdf,.doc,.docx\"\r\n        onChange={handleFileChange}\r\n      />\r\n      <button type=\"submit\" disabled={!file || loading}>\r\n        {loading ? \"Reviewing...\" : \"Submit for Review\"}\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default UploadForm;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAMxC,KAAM,CAAAC,UAAqC,CAAGC,IAAA,EAAoB,IAAnB,CAAEC,UAAW,CAAC,CAAAD,IAAA,CAC3D,KAAM,CAACE,IAAI,CAAEC,OAAO,CAAC,CAAGT,QAAQ,CAAc,IAAI,CAAC,CACnD,KAAM,CAACU,OAAO,CAAEC,UAAU,CAAC,CAAGX,QAAQ,CAAC,KAAK,CAAC,CAE7C,KAAM,CAAAY,gBAAgB,CAAIC,CAAsC,EAAK,CACnE,GAAIA,CAAC,CAACC,MAAM,CAACC,KAAK,EAAIF,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAE,CACvCN,OAAO,CAACI,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC,CAC5B,CACF,CAAC,CAED,KAAM,CAAAC,YAAY,CAAG,KAAO,CAAAH,CAAkB,EAAK,CACjDA,CAAC,CAACI,cAAc,CAAC,CAAC,CAClB,GAAI,CAACT,IAAI,CAAE,OAEX,KAAM,CAAAU,QAAQ,CAAG,GAAI,CAAAC,QAAQ,CAAC,CAAC,CAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,CAAEZ,IAAI,CAAC,CAE7BG,UAAU,CAAC,IAAI,CAAC,CAChB,GAAI,CACF,KAAM,CAAAU,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,kCAAkC,CAAE,CAC/DC,MAAM,CAAE,MAAM,CACdC,IAAI,CAAEN,QACR,CAAC,CAAC,CAEF,GAAI,CAACG,QAAQ,CAACI,EAAE,CAAE,CAChB,KAAM,IAAI,CAAAC,KAAK,CAAC,qCAAqC,CAAC,CACxD,CAEA,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAN,QAAQ,CAACO,IAAI,CAAC,CAAC,CAClCC,OAAO,CAACC,GAAG,CAAC,aAAa,CAAEH,IAAI,CAAC,CAEhC;AACApB,UAAU,CAACoB,IAAI,CAAC,CAEhB;AACAI,YAAY,CAACC,OAAO,CAAC,UAAU,CAAEC,IAAI,CAACC,SAAS,CAACP,IAAI,CAAC,CAAC,CACxD,CAAE,MAAOQ,KAAK,CAAE,CACdN,OAAO,CAACM,KAAK,CAAC,gBAAgB,CAAEA,KAAK,CAAC,CACtCC,KAAK,CAAC,mDAAmD,CAAC,CAC5D,CAAC,OAAS,CACRzB,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAC,CAED,mBACEP,KAAA,SAAMiC,QAAQ,CAAErB,YAAa,CAACsB,KAAK,CAAE,CAAEC,YAAY,CAAE,MAAO,CAAE,CAAAC,QAAA,eAC5DtC,IAAA,UACEuC,IAAI,CAAC,MAAM,CACXC,MAAM,CAAC,iBAAiB,CACxBC,QAAQ,CAAE/B,gBAAiB,CAC5B,CAAC,cACFV,IAAA,WAAQuC,IAAI,CAAC,QAAQ,CAACG,QAAQ,CAAE,CAACpC,IAAI,EAAIE,OAAQ,CAAA8B,QAAA,CAC9C9B,OAAO,CAAG,cAAc,CAAG,mBAAmB,CACzC,CAAC,EACL,CAAC,CAEX,CAAC,CAED,cAAe,CAAAL,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}